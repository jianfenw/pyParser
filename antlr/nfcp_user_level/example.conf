
/* The NFCP user-level configuration file.
*
* NFCP libraries are created by the NFCP users.
* In this script, we will test all module connection semantics. 
* Title: example.conf
*
* Author: Jianfeng
* Timestamp: May 22th, 2018
* Email: jianfenw@usc.edu
*/

/* Test Basic Data Types */

int_a = 10
float_b = 5.4
float_c = 0.3
string_d = 'abc fda'
string_e = "fhdklasjfk fdsap"
bool_f = False
bool_g = True

/*
 * Test nTuple
 */

tuple_a = { 'priority' : 0, 'filter': 'tcp src port 92', 'gate': 1}
tuple_b = {'dst_ip' : '1.0.1.1'}

/*
 * Test nList
 */

list_a = [1, '1', '1.0.1.1']
list_b = [ tuple_a, tuple_b, {'abc': 0} ]

/*
 * Test nlinkedlist
 * Note: in a linked list, each element must be either netfunction or a variable
 * which represents a netfunction
 *
 * Examples: 
 * linkedlist_a = a -> b -> c
 * linkedlist_b = d -> e() -> SilkRoad()
 */

/*
 * Network Function Configuration
 * Define NF instance / Define NF chain / configure NF chain with flowspec
 */

ttl = UpdateTTL()
traffic_1 = [{'src_ip' : '10.0.0.1'}]
traffic_2 = [{'dst_ip' : '1.1.1.1'}]

sp_1 = SilkRoad() -> IPv4Forward() -> [ {'flowspec' : [{'src_ip' : '1.0.0.1'}], 'nfchain' : linkedlist_a}, { 'flowspec': traffic_1, 'nfchain': ttl -> IPv4Forward() } , { 'flowspec': traffic_2, 'nfchain': IPv4Forward() }]
sp_2 = ttl -> IPv4Forward()


traffic_1 : sp_1
traffic_2 :  sp_2

